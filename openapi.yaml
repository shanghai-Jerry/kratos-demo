# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /KnowledgeBaseService/AddDocs:
        post:
            tags:
                - KnowledgeBaseService
            description: 单个文档数据添加
            operationId: KnowledgeBaseService_AddDocs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.DocAddRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DocAddResponse'
    /KnowledgeBaseService/CreateBase:
        post:
            tags:
                - KnowledgeBaseService
            description: 知识库创建
            operationId: KnowledgeBaseService_CreateBase
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.CreateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.CreateResponse'
    /KnowledgeBaseService/DeleteBase:
        post:
            tags:
                - KnowledgeBaseService
            description: 知识库删除
            operationId: KnowledgeBaseService_DeleteBase
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.DeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DeleteResponse'
    /KnowledgeBaseService/DeleteDoc:
        post:
            tags:
                - KnowledgeBaseService
            description: 单个文档删除
            operationId: KnowledgeBaseService_DeleteDoc
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.DocDeleteRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DocDeleteResponse'
    /KnowledgeBaseService/DocDetail:
        get:
            tags:
                - KnowledgeBaseService
            description: 单个文档详情页
            operationId: KnowledgeBaseService_DocDetail
            parameters:
                - name: docId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DocDetailResponse'
    /KnowledgeBaseService/EnableDocStatus:
        post:
            tags:
                - KnowledgeBaseService
            description: 文档启用和禁用
            operationId: KnowledgeBaseService_EnableDocStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.EnableDocStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.EnableDocStatusResponse'
    /KnowledgeBaseService/EnableShardStatus:
        post:
            tags:
                - KnowledgeBaseService
            description: 文档内单个分段状态更新
            operationId: KnowledgeBaseService_EnableShardStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.EnableShardStatuseRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.EnableShardStatusResponse'
    /KnowledgeBaseService/ListBase:
        get:
            tags:
                - KnowledgeBaseService
            description: |-
                知识库列表页（分页处理）
                 按知识库名称搜索：传参数到name字段
            operationId: KnowledgeBaseService_ListBase
            parameters:
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.ListResponse'
    /KnowledgeBaseService/ListDocs:
        get:
            tags:
                - KnowledgeBaseService
            description: |-
                单个知识库内：文档列表页(分页处理)
                 按文件名称搜索 传字段到name字段
            operationId: KnowledgeBaseService_ListDocs
            parameters:
                - name: kbId
                  in: query
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: offset
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DocListResponse'
    /KnowledgeBaseService/Query:
        get:
            tags:
                - KnowledgeBaseService
            description: '接口: Query查询'
            operationId: KnowledgeBaseService_Query
            parameters:
                - name: query
                  in: query
                  schema:
                    type: string
                - name: kbIds
                  in: query
                  schema:
                    type: array
                    items:
                        type: string
                - name: score
                  in: query
                  schema:
                    type: number
                    format: double
                - name: topN
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.QueryDocShardsResponse'
    /KnowledgeBaseService/SegmentPreview:
        get:
            tags:
                - KnowledgeBaseService
            description: 接口： 分段预览（TODO）
            operationId: KnowledgeBaseService_SegmentPreview
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.DocShardPreviewResponse'
    /KnowledgeBaseService/UpdataBase:
        post:
            tags:
                - KnowledgeBaseService
            description: 知识库更新（名称，描述）
            operationId: KnowledgeBaseService_UpdataBase
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/kb.v1.UpdateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/kb.v1.UpdateResponse'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
components:
    schemas:
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
                now:
                    type: string
                    format: date-time
            description: The response message containing the greetings
        kb.v1.CreateRequest:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
                indexType:
                    type: integer
                    format: enum
                indexConfig:
                    $ref: '#/components/schemas/kb.v1.IndexConfig'
                vectorStoreMod:
                    type: integer
                    format: enum
                vectorStoreConfig:
                    $ref: '#/components/schemas/kb.v1.VectorStoreConfig'
                source:
                    type: integer
                    description: 导入方式
                    format: enum
                sourceConfig:
                    $ref: '#/components/schemas/kb.v1.SourceConfig'
                splitType:
                    type: integer
                    description: 分段与清洗类型
                    format: enum
                splitConfig:
                    $ref: '#/components/schemas/kb.v1.SplitConfig'
            description: 知识库创建
        kb.v1.CreateResponse:
            type: object
            properties:
                kbId:
                    type: string
        kb.v1.DeleteRequest:
            type: object
            properties:
                kbId:
                    type: string
            description: 知识库删除
        kb.v1.DeleteResponse:
            type: object
            properties: {}
        kb.v1.DocAddRequest:
            type: object
            properties:
                kbId:
                    type: string
                source:
                    type: integer
                    description: 导入方式
                    format: enum
                sourceConfig:
                    $ref: '#/components/schemas/kb.v1.SourceConfig'
                splitType:
                    type: integer
                    description: 分段与清洗类型
                    format: enum
                splitConfig:
                    $ref: '#/components/schemas/kb.v1.SplitConfig'
            description: 知识库导入文件请求
        kb.v1.DocAddResponse:
            type: object
            properties: {}
        kb.v1.DocDeleteRequest:
            type: object
            properties:
                kbId:
                    type: string
                docId:
                    type: string
            description: 知识库文档删除
        kb.v1.DocDeleteResponse:
            type: object
            properties: {}
        kb.v1.DocDetailResponse:
            type: object
            properties:
                doc:
                    $ref: '#/components/schemas/kb.v1.KBDoc'
                shards:
                    type: array
                    items:
                        $ref: '#/components/schemas/kb.v1.KBDocShard'
        kb.v1.DocListResponse:
            type: object
            properties:
                kbInfo:
                    $ref: '#/components/schemas/kb.v1.KBInfo'
                docs:
                    type: array
                    items:
                        $ref: '#/components/schemas/kb.v1.KBDoc'
                releatedAppNames:
                    type: array
                    items:
                        type: string
                totalCount:
                    type: integer
                    format: int64
                pageSize:
                    type: integer
                    format: int64
                offset:
                    type: integer
                    format: int64
        kb.v1.DocShardPreviewResponse:
            type: object
            properties: {}
        kb.v1.EnableDocStatusRequest:
            type: object
            properties:
                kbId:
                    type: string
                docId:
                    type: string
                status:
                    type: integer
                    description: 启用状态， 全部启用或者全部禁用所有分段
                    format: enum
            description: 文档启用或禁用
        kb.v1.EnableDocStatusResponse:
            type: object
            properties: {}
        kb.v1.EnableShardStatusResponse:
            type: object
            properties: {}
        kb.v1.EnableShardStatuseRequest:
            type: object
            properties:
                kbId:
                    type: string
                docId:
                    type: string
                shardId:
                    type: string
                status:
                    type: integer
                    format: enum
            description: 文档分段状态启用与禁用请求
        kb.v1.IndexConfig:
            type: object
            properties:
                ak:
                    type: string
                sk:
                    type: string
            description: '索引配置: 在使用embedding API时，需要提供'
        kb.v1.KBDoc:
            type: object
            properties:
                kbId:
                    type: string
                    description: 知识库id
                docId:
                    type: string
                    description: 文档id
                name:
                    type: string
                    description: 文件名
                size:
                    type: integer
                    description: 原始文件大小(kb)
                    format: int64
                shardsNum:
                    type: integer
                    description: 段落数量
                    format: int64
                hitShardsNum:
                    type: integer
                    description: 命中段落数据
                    format: int32
                source:
                    type: integer
                    description: 文件来源， 本地导入，BOS目录导入，分享链接导入
                    format: enum
                embeddingTimeSec:
                    type: number
                    description: 嵌入时间
                    format: double
                embeddingCostTokens:
                    type: number
                    description: 嵌入花费tokens
                    format: double
                createdTime:
                    type: integer
                    format: int64
                updatedTime:
                    type: integer
                    format: int64
                status:
                    type: integer
                    description: 文档状态： 配置中，启用、错误
                    format: enum
                bucket:
                    type: string
                storagePath:
                    type: string
                message:
                    type: string
                    description: '文档导入信息: 比如，具体导入错误原因等'
                enableStatus:
                    type: integer
                    description: 启用状态
                    format: enum
                charsNum:
                    type: integer
                    description: 文档字符数
                    format: int64
                shardAvgCharsNum:
                    type: integer
                    description: 分段平均字符数
                    format: int64
                sourceConfig:
                    $ref: '#/components/schemas/kb.v1.SourceConfig'
                splitType:
                    type: integer
                    description: 分段与清洗类型
                    format: enum
                splitConfig:
                    $ref: '#/components/schemas/kb.v1.SplitConfig'
            description: 知识库内文档元数据表
        kb.v1.KBDocShard:
            type: object
            properties:
                kbId:
                    type: string
                    description: 知识库id
                docId:
                    type: string
                    description: 文档id
                index:
                    type: integer
                    description: 分段序号
                    format: int32
                shardId:
                    type: string
                    description: 分段id
                hitNum:
                    type: integer
                    description: 分段命中次数
                    format: int64
                charsNum:
                    type: integer
                    description: 分段字符数量
                    format: int64
                enableStatus:
                    type: integer
                    description: 分段状态： 启用， 禁用
                    format: enum
                createdTime:
                    type: integer
                    format: int64
                updatedTime:
                    type: integer
                    format: int64
                contentUrl:
                    type: string
                entityId:
                    type: string
            description: 文档分段数据表
        kb.v1.KBInfo:
            type: object
            properties:
                kbId:
                    type: string
                    description: 知识库id
                name:
                    type: string
                    description: 名称
                description:
                    type: string
                    description: 描述
                docsNum:
                    type: integer
                    description: 文档个数
                    format: int64
                charsNum:
                    type: integer
                    description: 文档个数
                    format: int64
                releatedAppsNum:
                    type: integer
                    description: 关联应用数
                    format: int32
                status:
                    type: integer
                    description: '状态: 新建，已删除'
                    format: enum
                indexType:
                    type: integer
                    description: 索引模式：0 经济型 1 embedding API
                    format: enum
                vectorStoreMod:
                    type: integer
                    description: 数据库选择： 类型 0 共用向量库 1 BES
                    format: enum
                createdTime:
                    type: integer
                    description: 创建时间
                    format: int64
                updatedTime:
                    type: integer
                    description: 更新时间
                    format: int64
                splitType:
                    type: integer
                    description: 分段与清洗类型
                    format: enum
                indexConfig:
                    $ref: '#/components/schemas/kb.v1.IndexConfig'
                splitConfig:
                    $ref: '#/components/schemas/kb.v1.SplitConfig'
                vectorStoreConfig:
                    $ref: '#/components/schemas/kb.v1.VectorStoreConfig'
                accountId:
                    type: integer
                    description: 用户态信息
                    format: int64
                accountType:
                    type: string
                bceUserId:
                    type: string
            description: 知识库元数据表
        kb.v1.ListResponse:
            type: object
            properties:
                kbInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/kb.v1.KBInfo'
                totalCount:
                    type: integer
                    format: int64
                offset:
                    type: integer
                    format: int64
                pageSize:
                    type: integer
                    format: int64
        kb.v1.QueryDocShardsResponse:
            type: object
            properties:
                contentUrls:
                    type: array
                    items:
                        type: string
        kb.v1.SourceConfig:
            type: object
            properties:
                importType:
                    type: string
                bucket:
                    type: string
                path:
                    type: string
                link:
                    type: string
                docEntitiyIds:
                    type: array
                    items:
                        type: string
            description: 导入的具体信息
        kb.v1.SplitConfig:
            type: object
            properties:
                splitSymbol:
                    type: string
                    description: 分隔符
                splitLen:
                    type: integer
                    description: 分段最大长度
                    format: int32
                preprocess:
                    type: array
                    items:
                        type: integer
                        format: enum
                    description: 需要对文档进行预处理规则类型
            description: 分段配置项
        kb.v1.UpdateRequest:
            type: object
            properties:
                kbId:
                    type: string
                name:
                    type: string
                description:
                    type: string
            description: 更新知识库基本信息
        kb.v1.UpdateResponse:
            type: object
            properties: {}
        kb.v1.VectorStoreConfig:
            type: object
            properties:
                clusterIp:
                    type: string
                    description: 集群ip
                clusterName:
                    type: string
                    description: 集群名称
                user:
                    type: string
                    description: 用户名
                pwd:
                    type: string
                    description: 密码
            description: 向量库配置
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: KnowledgeBaseService
      description: |-
        知识库管理服务
         接口定义
         注意：
         1. proto中定义的request是放在body中或者URL中，字段的定义和request中的定义保持一致
         2. proto中定义的response在最终http请求返回结果中的result字段中，参考：HTTPResponse
